"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/tools/hire/create/job-location/page",{

/***/ "(app-pages-browser)/./utils/add-location-requirement.js":
/*!*******************************************!*\
  !*** ./utils/add-location-requirement.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocationRequirement: function() { return /* binding */ addLocationRequirement; }\n/* harmony export */ });\n/* harmony import */ var _toast_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toast-config */ \"(app-pages-browser)/./utils/toast-config.js\");\n// This Function Adds a Location requirement.\n//  We take in the type parameter: This can Either be Country or State\n// And we take in th requirements parameter: this is the list of either the state requirements or country requirements\n// The setRequirement will be the method that updates the requirements list\n// The newValue that should be added\n// toast... So we'll be able to throw an error\n// clearNewValueField: this should be a method that allows us to reset the value of the newValue to be added\n\nfunction addLocationRequirement(type, requirements, setReQuirements, newValue, toast, clearNewValueField) {\n    // We will use this variable to Keep track of the new value that should be added to the list\n    let checker = true;\n    // If the new Value is an empty string, throw an error\n    if (newValue.trim() === \"\") {\n        toast.error(type + \" Field is empty!\", _toast_config__WEBPACK_IMPORTED_MODULE_0__.toastConfig);\n        return;\n    }\n    // Otherwise, check if the new value already exists\n    requirements.forEach((item)=>{\n        if (item.name === newValue) {\n            checker = false;\n        }\n    });\n    // If the new Value doesn't exist, add it to the list. Otherwise, throw an error\n    if (checker) {\n        setReQuirements((prev)=>[\n                ...prev,\n                {\n                    \"@type\": type,\n                    name: newValue\n                }\n            ]);\n        clearNewValueField(\"\");\n    } else {\n        clearNewValueField(\"\");\n        toast.error(type + \" Already Exist\", _toast_config__WEBPACK_IMPORTED_MODULE_0__.toastConfig);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2FkZC1sb2NhdGlvbi1yZXF1aXJlbWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDZDQUE2QztBQUM3QyxzRUFBc0U7QUFDdEUsc0hBQXNIO0FBQ3RILDJFQUEyRTtBQUMzRSxvQ0FBb0M7QUFDcEMsOENBQThDO0FBQzlDLDRHQUE0RztBQUVoRTtBQUVyQyxTQUFTQyx1QkFDWkMsSUFBSSxFQUNKQyxZQUFZLEVBQ1pDLGVBQWUsRUFDZkMsUUFBUSxFQUNSQyxLQUFLLEVBQ0xDLGtCQUFrQjtJQUVsQiw0RkFBNEY7SUFDNUYsSUFBSUMsVUFBVTtJQUVkLHNEQUFzRDtJQUN0RCxJQUFJSCxTQUFTSSxJQUFJLE9BQU8sSUFBSTtRQUN4QkgsTUFBTUksS0FBSyxDQUFDUixPQUFPLG9CQUFvQkYsc0RBQVdBO1FBQ2xEO0lBQ0o7SUFFQSxtREFBbUQ7SUFDbkRHLGFBQWFRLE9BQU8sQ0FBQ0MsQ0FBQUE7UUFDakIsSUFBSUEsS0FBS0MsSUFBSSxLQUFLUixVQUFVO1lBQ3hCRyxVQUFVO1FBQ2Q7SUFDSjtJQUVBLGdGQUFnRjtJQUNoRixJQUFJQSxTQUFTO1FBQ1RKLGdCQUFnQlUsQ0FBQUEsT0FBUTttQkFBSUE7Z0JBQU07b0JBQUUsU0FBU1o7b0JBQU1XLE1BQU1SO2dCQUFTO2FBQUU7UUFDcEVFLG1CQUFtQjtJQUN2QixPQUFPO1FBQ0hBLG1CQUFtQjtRQUNuQkQsTUFBTUksS0FBSyxDQUFDUixPQUFPLGtCQUFrQkYsc0RBQVdBO0lBQ3BEO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvYWRkLWxvY2F0aW9uLXJlcXVpcmVtZW50LmpzP2IxOTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBGdW5jdGlvbiBBZGRzIGEgTG9jYXRpb24gcmVxdWlyZW1lbnQuXHJcbi8vICBXZSB0YWtlIGluIHRoZSB0eXBlIHBhcmFtZXRlcjogVGhpcyBjYW4gRWl0aGVyIGJlIENvdW50cnkgb3IgU3RhdGVcclxuLy8gQW5kIHdlIHRha2UgaW4gdGggcmVxdWlyZW1lbnRzIHBhcmFtZXRlcjogdGhpcyBpcyB0aGUgbGlzdCBvZiBlaXRoZXIgdGhlIHN0YXRlIHJlcXVpcmVtZW50cyBvciBjb3VudHJ5IHJlcXVpcmVtZW50c1xyXG4vLyBUaGUgc2V0UmVxdWlyZW1lbnQgd2lsbCBiZSB0aGUgbWV0aG9kIHRoYXQgdXBkYXRlcyB0aGUgcmVxdWlyZW1lbnRzIGxpc3RcclxuLy8gVGhlIG5ld1ZhbHVlIHRoYXQgc2hvdWxkIGJlIGFkZGVkXHJcbi8vIHRvYXN0Li4uIFNvIHdlJ2xsIGJlIGFibGUgdG8gdGhyb3cgYW4gZXJyb3JcclxuLy8gY2xlYXJOZXdWYWx1ZUZpZWxkOiB0aGlzIHNob3VsZCBiZSBhIG1ldGhvZCB0aGF0IGFsbG93cyB1cyB0byByZXNldCB0aGUgdmFsdWUgb2YgdGhlIG5ld1ZhbHVlIHRvIGJlIGFkZGVkXHJcblxyXG5pbXBvcnQgeyB0b2FzdENvbmZpZyB9IGZyb20gJy4vdG9hc3QtY29uZmlnJ1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFkZExvY2F0aW9uUmVxdWlyZW1lbnQoXHJcbiAgICB0eXBlLFxyXG4gICAgcmVxdWlyZW1lbnRzLFxyXG4gICAgc2V0UmVRdWlyZW1lbnRzLFxyXG4gICAgbmV3VmFsdWUsXHJcbiAgICB0b2FzdCxcclxuICAgIGNsZWFyTmV3VmFsdWVGaWVsZCxcclxuKSB7XHJcbiAgICAvLyBXZSB3aWxsIHVzZSB0aGlzIHZhcmlhYmxlIHRvIEtlZXAgdHJhY2sgb2YgdGhlIG5ldyB2YWx1ZSB0aGF0IHNob3VsZCBiZSBhZGRlZCB0byB0aGUgbGlzdFxyXG4gICAgbGV0IGNoZWNrZXIgPSB0cnVlXHJcblxyXG4gICAgLy8gSWYgdGhlIG5ldyBWYWx1ZSBpcyBhbiBlbXB0eSBzdHJpbmcsIHRocm93IGFuIGVycm9yXHJcbiAgICBpZiAobmV3VmFsdWUudHJpbSgpID09PSAnJykge1xyXG4gICAgICAgIHRvYXN0LmVycm9yKHR5cGUgKyAnIEZpZWxkIGlzIGVtcHR5IScsIHRvYXN0Q29uZmlnKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG5cclxuICAgIC8vIE90aGVyd2lzZSwgY2hlY2sgaWYgdGhlIG5ldyB2YWx1ZSBhbHJlYWR5IGV4aXN0c1xyXG4gICAgcmVxdWlyZW1lbnRzLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgICAgaWYgKGl0ZW0ubmFtZSA9PT0gbmV3VmFsdWUpIHtcclxuICAgICAgICAgICAgY2hlY2tlciA9IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBJZiB0aGUgbmV3IFZhbHVlIGRvZXNuJ3QgZXhpc3QsIGFkZCBpdCB0byB0aGUgbGlzdC4gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvclxyXG4gICAgaWYgKGNoZWNrZXIpIHtcclxuICAgICAgICBzZXRSZVF1aXJlbWVudHMocHJldiA9PiBbLi4ucHJldiwgeyAnQHR5cGUnOiB0eXBlLCBuYW1lOiBuZXdWYWx1ZSB9XSlcclxuICAgICAgICBjbGVhck5ld1ZhbHVlRmllbGQoJycpXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGNsZWFyTmV3VmFsdWVGaWVsZCgnJylcclxuICAgICAgICB0b2FzdC5lcnJvcih0eXBlICsgJyBBbHJlYWR5IEV4aXN0JywgdG9hc3RDb25maWcpXHJcbiAgICB9XHJcbn1cclxuIl0sIm5hbWVzIjpbInRvYXN0Q29uZmlnIiwiYWRkTG9jYXRpb25SZXF1aXJlbWVudCIsInR5cGUiLCJyZXF1aXJlbWVudHMiLCJzZXRSZVF1aXJlbWVudHMiLCJuZXdWYWx1ZSIsInRvYXN0IiwiY2xlYXJOZXdWYWx1ZUZpZWxkIiwiY2hlY2tlciIsInRyaW0iLCJlcnJvciIsImZvckVhY2giLCJpdGVtIiwibmFtZSIsInByZXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/add-location-requirement.js\n"));

/***/ })

});